services:
  api-server:
    networks:
      - bigdata-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./models:/usr/local/airflow/models
    user: root
    group_add:
      - "root"
    cpus: "1.0"
    mem_limit: "2g"
    environment:
      - AIRFLOW__WEBSERVER__WORKERS=1
      - AIRFLOW__WEBSERVER__WORKER_CLASS=gthread
      - AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT=3000
      - AIRFLOW__WEBSERVER__WEB_SERVER_WORKER_TIMEOUT=3000
      - AIRFLOW__WEBSERVER__WEB_SERVER_PORT=8089
      - AIRFLOW__WEBSERVER__BASE_URL=http://api-server:8089
      - AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT=6000
      - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
      - AIRFLOW__CORE__MIN_SERIALIZED_DAG_UPDATE_INTERVAL=30
      - RABBITMQ_MGMT_URL=http://rabbitmq:15672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin1234
      - AIRFLOW_CONN_KAFKA_DEFAULT="kafka://?bootstrap.servers=kafka:9092&group.id=water_quality_sensor"
      - KAFKA_GROUP_ID=water_quality_group
      - SPARK_FORCE_LOCAL=true
      - JAVA_OPTS="-Xms512m -Xmx1536m -XX:+UseG1GC -Djava.net.preferIPv4Stack=true"



  scheduler:
    networks:
      - bigdata-network
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./models:/usr/local/airflow/models
    group_add:
      - "root"
    cpus: "0.50"
    mem_limit: "1g"
    environment:
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__LAZY_LOAD_PLUGINS=True
      - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
      - AIRFLOW__CORE__MIN_SERIALIZED_DAG_UPDATE_INTERVAL=30
      - AIRFLOW__WEBSERVER__BASE_URL=http://api-server:8089
      - RABBITMQ_MGMT_URL=http://rabbitmq:15672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin1234
      - AIRFLOW_CONN_KAFKA_DEFAULT="kafka://?bootstrap.servers=kafka:9092&group.id=water_quality_sensor"
      - KAFKA_GROUP_ID=water_quality_group
      - SPARK_FORCE_LOCAL=true
      - AIRFLOW__SCHEDULER__PARSING_PROCESSES=1
      - AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL=30
      - AIRFLOW__CORE__PARALLELISM=4
      - AIRFLOW__CORE__DAG_CONCURRENCY=2



  triggerer:
    networks:
      - bigdata-network
    user: root 
    volumes:
      - ./models:/usr/local/airflow/models
    group_add:
      - "root"
    cpus: "0.25"
    mem_limit: "512m"
    environment:
      - PYTHONASYNCIODEBUG=1

      - RABBITMQ_MGMT_URL=http://rabbitmq:15672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin1234
      - AIRFLOW_CONN_KAFKA_DEFAULT="kafka://?bootstrap.servers=kafka:9092&group.id=water_quality_sensor"
      - KAFKA_GROUP_ID=water_quality_group
      - AIRFLOW__WEBSERVER__BASE_URL=http://api-server:8089



  # Kafka Zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    cpus: "0.50"
    mem_limit: "512m"
    ports:
      - "8085:8085"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_UI_AUTH_TYPE: BASIC
      AUTH_ENABLED: "true"                # ← turn on auth module
      AUTH_TYPE: "LOGIN_FORM"             # ← basic login form
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: admin1234
      SERVER_PORT: "8085"
    networks:
      - bigdata-network
  # Apache Kafka (single-node, KRaft mode)
  kafka:
    image: apache/kafka:3.7.0
    container_name: kafka
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_LISTENERS=INTERNAL://:9092,EXTERNAL://:19092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://194.238.16.14:19092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_LOG_DIRS=/var/lib/kafka/data
      - KAFKA_HEAP_OPTS=-Xms512m -Xmx512m
      - KAFKA_NUM_NETWORK_THREADS=1
      - KAFKA_NUM_IO_THREADS=1
      - KAFKA_NUM_PARTITIONS=1
      - KAFKA_LOG_CLEANER_THREADS=1
      - KAFKA_BACKGROUND_THREADS=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1
      - KAFKA_MIN_INSYNC_REPLICAS=1
    cpus: "1.0"
    mem_limit: "2g"
    ports:
      - "19092:19092"
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - bigdata-network
  # Spark Master and Worker Nodes
  spark-master:
    image: apache/spark:3.5.3
    container_name: spark-master
    hostname: spark-master
    cpus: "1.0"
    mem_limit: "2g"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5003
      - SPARK_MASTER_OPTS=-Dspark.deploy.defaultCores=2 -Dspark.network.timeout=300s -Dspark.rpc.askTimeout=120s
      - JAVA_OPTS="-Xms512m -Xmx1536m -XX:+UseG1GC -XX:+UseStringDeduplication -Djava.net.preferIPv4Stack=true"
    command: >
      /opt/spark/bin/spark-class org.apache.spark.deploy.master.Master
      --host spark-master --port 7077 --webui-port 8080
    ports:
      - "8080:8080"   # Spark Master UI
      - "7077:7077"   # Spark Master RPC
    volumes:
      - ./models:/app/models
    networks:
      - bigdata-network

# --- Spark Worker ---
  spark-worker:
    image: apache/spark:3.5.3
    container_name: spark-worker
    cpus: "2.0"
    mem_limit: "2g"
    depends_on:
      - spark-master
    environment:
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=1536M
      - SPARK_WORKER_OPTS=-Dspark.network.timeout=300s -Dspark.rpc.askTimeout=120s
      - JAVA_OPTS="-Xms512m -Xmx1536m -XX:+UseG1GC -XX:+UseStringDeduplication -Djava.net.preferIPv4Stack=true"
    command: >
      /opt/spark/bin/spark-class org.apache.spark.deploy.worker.Worker
      spark://spark-master:7077
    ports:
      - "8081:8081"   # Spark Worker UI
    volumes:
      - ./models:/app/models
    networks:
      - bigdata-network

# --- MLflow Tracking Server ---
  mlflow:
    image: adacotechjp/mlflow:2.5.0
    container_name: mlflow
    user: "0:0"             # đảm bảo quyền ghi vào volume
    cpus: "0.25"
    mem_limit: "512m"
    ports:
      - "5003:5003"
    networks:
      - bigdata-network
    volumes:
      - ./mlruns:/app/mlruns
      - ./mlartifacts:/app/mlartifacts
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5003
    entrypoint: ["mlflow", "server"]
    command: [
      "--backend-store-uri", "file:/app/mlruns",
      "--default-artifact-root", "file:/app/mlartifacts",
      "--host", "0.0.0.0",
      "--port", "5003"
    ]


  # RabbitMQ (with management UI)
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    cpus: "0.50"
    mem_limit: "1g"
    ports:
      - "5672:5672"     # AMQP
      - "15672:15672"   # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin1234
      - RABBITMQ_DEFAULT_VHOST=/
    networks:
      - bigdata-network


  # === Grafana ===
  grafana:
    image: grafana/grafana:9.5.2
    cpus: "0.25"
    mem_limit: "512m"
    networks:
      - bigdata-network
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/etc/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
      - GF_AUTH_ANONYMOUS_ENABLED=true              # ✔️ Cho phép xem không cần login
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer          # ✔️ Chỉ quyền xem
      - GF_AUTH_BASIC_ENABLED=false 
      - GF_SECURITY_ALLOW_EMBEDDING=true
    ports:
      - "3000:3000"
  postgres:
    cpus: "1.0"
    mem_limit: "2g"
    command: [
      "postgres",
      "-c", "shared_buffers=512MB",
      "-c", "work_mem=4MB",
      "-c", "maintenance_work_mem=64MB",
      "-c", "effective_cache_size=1536MB",
      "-c", "max_connections=100",
      "-c", "jit=off",
      "-c", "autovacuum_naptime=30s",
      "-c", "autovacuum_vacuum_cost_limit=200",
      "-c", "shared_preload_libraries=pg_stat_statements"
    ]
    networks:
      - bigdata-network



networks:
  bigdata-network:
    name: bigdata-network
    driver: bridge
volumes:
  mlruns:
  mlartifacts:
  grafana_data:
  kafka_data:




