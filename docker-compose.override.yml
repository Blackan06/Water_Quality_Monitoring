services:
  webserver:
    networks:
      - bigdata-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    group_add:
      - "root"

  scheduler:
    networks:
      - bigdata-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    group_add:
      - "root"

  triggerer:
    networks:
      - bigdata-network


  # Kafka Zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8085:8085"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: 77.37.44.237:9092
      KAFKA_UI_AUTH_TYPE: BASIC
      AUTH_ENABLED: "true"                # ← turn on auth module
      AUTH_TYPE: "LOGIN_FORM"             # ← basic login form
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: admin1234
      SERVER_PORT: "8085"
    networks:
      - bigdata-network
  # Spark Master and Worker Nodes
  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - MLFLOW_TRACKING_URI=http://mlflow:5003 
    ports:
      - "8080:8080"  # Spark UI
      - "7077:7077"  # Spark master port
    networks:
      - bigdata-network

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - "8081:8081"
    networks:
      - bigdata-network

  # MLflow tracking server
  mlflow:
    image: bitnami/mlflow:latest
    container_name: mlflow
    user: root              # hoặc root, để chắc MLflow có quyền ghi
    ports:
      - "5003:5003"
    networks:
      - bigdata-network
    volumes:
      - ./mlruns:/app/mlruns
      - ./mlartifacts:/app/mlartifacts

    entrypoint: ["mlflow", "server"]
    command:
      [
        "--backend-store-uri", "file:/app/mlruns",
        "--default-artifact-root", "file:/app/mlartifacts",
        "--host", "0.0.0.0",
        "--port", "5003"
      ]

  docker-proxy:
    image: alpine/socat
    container_name: docker-proxy
    command: TCP-LISTEN:2375,fork,reuseaddr UNIX-CONNECT:/var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "2375:2375"
    networks:
      - bigdata-network
    group_add:
      - "root"

networks:
  bigdata-network:
    driver: bridge

volumes:
  mlruns:
  mlartifacts:
  models:
    driver: local




