name: Deploy to VPS with Astro (Astronomer)

on:
  push:
    branches:
      - main  # Trigger the action on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          clean: false
  
      - name: Deploy to VPS using SSH
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.VPS_USERNAME }}
          host: ${{ secrets.VPS_HOST }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            # Navigate to your project directory
            cd Water_Quality_Monitoring 

            # Pull the latest code from the repository
            git pull origin main
            
            docker rmi water-quality-processor:latest
            docker rmi airflow/iot_stream:latest
            # Build water quality processor image
            echo "Building water quality processor image..."
            cd spark
            docker build -t water-quality-processor:latest .
            cd ..
            
            # Build IoT stream image
            echo "Building IoT stream image..."

            docker build -t  airflow/iot_stream  -f spark/spark_stream/Dockerfile .
                         
            # Kiểm tra nếu Astro Dev đang chạy (có container nào của Astro không?)
            echo "Checking if Astro Dev is running..."
            if docker ps | grep -q "webserver"; then
              echo "Astro Dev is already running. Stopping it..."
              # Dừng Astro Dev nếu đang chạy
              astro dev kill
            else
              echo "Astro Dev is not running. Starting it..."
            fi

            # Khởi động Astro Dev
            echo "Starting Astro Dev with Docker (Astronomer)..."
            astro dev start
            
            # Chờ một chút để các container khởi động
            sleep 30
            
            # Dọn dẹp Docker
            echo "Cleaning up unused Docker containers, volumes, networks..."
            docker container prune -f
            docker network prune -f
            docker volume prune -f            
            echo "Deployment succeeded!"
            exit 0



