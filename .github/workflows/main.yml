name: Deploy to VPS with Astro (Astronomer)

on:
  push:
    branches:
      - main  # Trigger the action on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          clean: false
      - name: Install Docker CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
      - name: Install or update astro-cli
        run: curl -sSL install.astronomer.io | sudo bash -s
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

      - name: Build Docker image for wqi_api
        run: |
          cd Water_Quality_Monitoring/api
          docker build -t ${{ secrets.DOCKER_USER }}/water-quality-monitoring_08846d-wqi_api:latest .

      - name: Push Docker image to Docker registry
        run: |
          docker push ${{ secrets.DOCKER_USER }}/water-quality-monitoring_08846d-wqi_api:latest

      - name: Deploy to VPS using SSH
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.VPS_USERNAME }}  # Use the username from GitHub Secrets
          host: ${{ secrets.VPS_HOST }}  # Use the VPS host (IP or domain) from GitHub Secrets
          key: ${{ secrets.VPS_PRIVATE_KEY }}  # Use the private key from GitHub Secrets
          script: |
            # Navigate to your project directory
            cd Water_Quality_Monitoring 

            # Pull the latest code from the repository
            git pull origin main

            # Check Docker status
            echo "Checking Docker status..."
            sudo systemctl status docker || sudo systemctl start docker

            # Log in to Docker container registry (e.g., Docker Hub or a private registry)
            echo "Logging in to Docker registry..."
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login https://sgp.vultrcr.com/pipelineiot -u ${{ secrets.DOCKER_USER }} --password-stdin
            echo "Pulling Docker image from Docker registry..."
            docker pull ${{ secrets.DOCKER_USER }}/water-quality-monitoring_08846d-wqi_api:latest
            # Astro config Docker
            astro config set container.binary docker -g
            # Astro change port web server
            astro config set -g webserver.port 8089
            # Build Image Web-API Device Token

            # Kiểm tra nếu Astro Dev đang chạy (có container nào của Astro không?)
            echo "Checking if Astro Dev is running..."
            if docker ps | grep -q "airflow"; then
              echo "Astro Dev is already running. Stopping it..."
              # Dừng Astro Dev nếu đang chạy
              astro dev stop
            else
              echo "Astro Dev is not running. Starting it..."
            fi

            # Khởi động lại Astro Dev
            echo "Starting Astro Dev with Docker (Astronomer)..."
            astro dev start  # Automatically builds and runs Docker containers for Airflow and your Astro project

            # Kiểm tra nếu Astro Dev đã khởi động thành công
            echo "Checking if project is running..."
            if ! docker ps | grep -q "airflow"; then
              echo "Airflow container not running. Exiting..."
              exit 1
            fi
