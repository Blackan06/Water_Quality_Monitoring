name: Deploy to VPS with Astro (Astronomer)

on:
  push:
    branches:
      - main  # Trigger the action on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          clean: false
      
    

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .  
          push: true
          tags: ${{ secrets.DOCKER_USER }}/dm_api:latest
          no-cache: true
          file: ./api/Dockerfile 

      - name: Deploy to VPS using SSH
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.VPS_USERNAME }}  # Use the username from GitHub Secrets
          host: ${{ secrets.VPS_HOST }}  # Use the VPS host (IP or domain) from GitHub Secrets
          key: ${{ secrets.VPS_PRIVATE_KEY }}  # Use the private key from GitHub Secrets
          script: |
            # Navigate to your project directory
            cd Water_Quality_Monitoring 

            # Pull the latest code from the repository
            git pull origin main

            # Check Docker status
            echo "Checking Docker status..."
            sudo systemctl status docker || sudo systemctl start docker

            # Log in to Docker container registry (e.g., Docker Hub or a private registry)
            echo "Logging in to Docker registry..."
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login  -u ${{ secrets.DOCKER_USER }} --password-stdin
            echo "Pulling Docker image from Docker registry..."
            docker pull ${{ secrets.DOCKER_USER }}/dm_api:latest

            # Stop and remove any existing containers before running a new one
            echo "Stopping and removing existing container..."
            docker stop wqi_api || true  # Stop container if running
            docker rm wqi_api || true    # Remove container

            # Run the new container from the pulled image
            echo "Running the Docker container..."
            docker run -d --name wqi_api -p 8018:8018 ${{ secrets.DOCKER_USER }}/dm_api:latest

            # Check if the container is running
            if ! docker ps | grep -q "wqi_api"; then
              echo "wqi_api container not running. Exiting..."
              exit 1
            fi

            # Verify the container is running
            echo "wqi_api container is running!"

            # Prune unused Docker objects (images, containers, volumes, etc.)
            echo "Cleaning up unused Docker resources..."
            docker system prune -f  # Force prune to clean up unused images, containers, and volumes            
            
            # Astro config Docker
            astro config set container.binary docker -g
            
            # Astro change port web server
            astro config set -g webserver.port 8089
            

            # Kiểm tra nếu Astro Dev đang chạy (có container nào của Astro không?)
            echo "Checking if Astro Dev is running..."
            if docker ps | grep -q "airflow"; then
              echo "Astro Dev is already running. Stopping it..."
              # Dừng Astro Dev nếu đang chạy
              astro dev stop
            else
              echo "Astro Dev is not running. Starting it..."
            fi

            # Khởi động lại Astro Dev
            echo "Starting Astro Dev with Docker (Astronomer)..."
            astro dev start  # Automatically builds and runs Docker containers for Airflow and your Astro project

            # Kiểm tra nếu Astro Dev đã khởi động thành công
            echo "Checking if project is running..."
            if ! docker ps | grep -q "airflow"; then
              echo "Airflow container not running. Exiting..."
              exit 1
            fi
